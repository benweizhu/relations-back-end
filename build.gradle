buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.2.2.RELEASE'
        classpath 'com.bluepapa32:gradle-watch-plugin:0.1.4'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'checkstyle'

jar {
    baseName = 'gs-spring-boot'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.10'
    compile 'com.google.guava:guava:18.0'
    compile 'org.apache.commons:commons-jexl:2.1.1'

    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'javax.servlet:servlet-api:2.5'
    testCompile 'junit:junit:4.11'
    testCompile 'com.jayway.jsonpath:json-path-assert:0.9.1'
}

apply plugin: 'com.bluepapa32.watch'

watch {
    java {
        files files('src/main/java')
        tasks 'compileJava'
    }
    resources {
        files fileTree(dir: 'src/main/resources', include: '**/*.xml')
        files fileTree(dir: 'src/main/resources', include: '**/*.properties')
        tasks 'processResources'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

idea.project.ipr {
    withXml { provider ->
        provider.node.component
                .find { it.@name == 'VcsDirectoryMappings' }
                .mapping.@vcs = 'Git'
    }
}